{"version":3,"sources":["pages/CreatePost.tsx","hook/redux-hooks.ts","store/userSlice.jsx","pages/Form/HomeForm.tsx","Components/Form.tsx","Components/Login.tsx","pages/LoginPage.tsx","pages/HomePage.tsx","hook/use-auth.ts","Components/SignUp.tsx","pages/RegisterPage.tsx","firebase.ts","App.tsx","store/index.ts","index.tsx"],"names":["CreatePost","useAppDispatch","useDispatch","useAppSelector","useSelector","userSlice","createSlice","require","name","initialState","email","token","id","reducers","setUser","state","payload","type","removeUser","actions","HomeForm","useForm","mode","register","formState","errors","isValid","handleSubmit","reset","className","onSubmit","data","alert","JSON","stringify","placeholder","required","minLength","value","message","style","height","firstName","lastName","disabled","Form","title","handleClick","useState","setEmail","password","setPass","onChange","e","target","onClick","Login","dispatch","navigate","useNavigate","auth","getAuth","signInWithEmailAndPassword","then","user","console","log","uid","refreshToken","catch","LoginPage","to","HomePage","isAuth","useAuth","SignUp","createUserWithEmailAndPassword","error","RegisterPage","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","App","path","element","store","configureStore","reducer","userReduser","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.8c7e6041.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const CreatePost = () => {\r\n  return (\r\n    <div>\r\n      create\r\n    </div>\r\n  )\r\n}\r\n","// import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\n// import { AppDispatch, RootState } from './../store/index';\r\n\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport { AppDispatch, RootState } from \"../store\";\r\n\r\n\r\n// export const useAppDispatch = () => useDispatch<AppDispatch>()\r\n// export const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\r\n\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","const { createSlice } = require('@reduxjs/toolkit')\r\n\r\nconst initialState = {\r\n  email: null,\r\n  token: null,\r\n  id: null,\r\n}\r\n\r\nconst userSlice = createSlice({\r\n  name: 'auto',\r\n  initialState,\r\n  reducers: {\r\n    setUser(state, { payload, type }) {\r\n      state.email = payload.email\r\n      state.token = payload.token\r\n      state.id = payload.id\r\n    },\r\n    removeUser(state) {\r\n      state.email = null\r\n      state.id = null\r\n      state.token = null\r\n    },\r\n  },\r\n})\r\n\r\nexport const { setUser, removeUser } = userSlice.actions\r\n\r\nexport default userSlice.reducer\r\n","import React from 'react'\r\nimport { useForm } from 'react-hook-form'\r\n\r\nexport const HomeForm = () => {\r\n  const {\r\n    register,\r\n    formState: { errors, isValid },\r\n    handleSubmit,\r\n    reset,\r\n  } = useForm({\r\n    mode: 'onBlur',\r\n  })\r\n\r\n  const onSubmit: any = (data: string) => {\r\n    alert(JSON.stringify(data))\r\n    reset()\r\n  }\r\n  return (\r\n    <div className='App'>\r\n      <h2>React form</h2>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <label>\r\n          <input\r\n            placeholder='firstname'\r\n            {...register('firstName', {\r\n              required: 'поле обязательно к заполнению',\r\n              minLength: {\r\n                value: 5,\r\n                message: 'минимум символов 5',\r\n              },\r\n            })}\r\n          />\r\n        </label>\r\n        <div style={{ height: 1 }}>\r\n          {errors?.firstName && <p>{errors?.firstName?.message || 'error'}</p>}\r\n        </div>\r\n        {/* last name */}\r\n        <label>\r\n          <input\r\n            placeholder='lastname'\r\n            {...register('lastName', {\r\n              required: 'поле обязательно к заполнению',\r\n              minLength: {\r\n                value: 5,\r\n                message: 'минимум символов 5',\r\n              },\r\n            })}\r\n          />\r\n        </label>\r\n        <div style={{ height: 1 }}>\r\n          {errors?.lastName && (\r\n            <p>{errors?.lastName?.message || 'минимум 5 символов'}</p>\r\n          )}\r\n        </div>\r\n\r\n        <input type='submit' disabled={!isValid} />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","import { FC, useState } from 'react'\r\n\r\ninterface FormProps {\r\n  title: string\r\n  handleClick: (email: string, password: string) => void\r\n}\r\n\r\nexport const Form: FC<FormProps> = ({ title, handleClick }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPass] = useState('')\r\n  return (\r\n    <div>\r\n      <input\r\n        type='email'\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        placeholder='email'\r\n      />\r\n      <input\r\n        type='password'\r\n        value={password}\r\n        onChange={(e) => setPass(e.target.value)}\r\n        placeholder='password'\r\n      />\r\n      <div>\r\n        <button onClick={() => handleClick(email, password)}>{title}</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth'\r\n\r\nimport { useDispatch } from 'react-redux'\r\nimport { Form } from './Form'\r\nimport { useNavigate } from 'react-router'\r\nimport { setUser } from '../store/userSlice'\r\n\r\nexport const Login = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const handelLogin = (email: string, password: string) => {\r\n    const auth = getAuth()\r\n    signInWithEmailAndPassword(auth, email, password)\r\n      .then(({ user }) => {\r\n        console.log(user)\r\n        dispatch(\r\n          setUser({\r\n            email: user.email,\r\n            id: user.uid,\r\n            token: user.refreshToken,\r\n          }))\r\n          navigate('/')\r\n      })\r\n      .catch(() => alert('Invalid user'))\r\n  }\r\n  return (\r\n    <div>\r\n      <Form title='sign in' handleClick={handelLogin} />\r\n    </div>\r\n  )\r\n}\r\n","import { Login } from '../Components/Login'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const LoginPage = () => {\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <Login />\r\n      <p>\r\n        Alredy have an account?: <Link to='/register'>Register</Link>\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form } from '../Components/Form'\r\nimport { useAppDispatch } from '../hook/redux-hooks'\r\nimport { useAuth } from '../hook/use-auth'\r\nimport { removeUser } from '../store/userSlice'\r\nimport { HomeForm } from './Form/HomeForm'\r\nimport { LoginPage } from './LoginPage'\r\n\r\nexport const HomePage = () => {\r\n  const { isAuth, email } = useAuth()\r\n  const dispatch = useAppDispatch()\r\n  return (\r\n    <div>\r\n      {!isAuth ? (\r\n        <div>\r\n          <LoginPage />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h1>home</h1>\r\n          <HomeForm />\r\n          <div>\r\n            <button onClick={() => dispatch(removeUser())}>relog</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { useAppSelector } from './redux-hooks';\r\n\r\nexport const useAuth = () => {\r\n  const {email, token, id} = useAppSelector(state => state.user)\r\n\r\n  return {\r\n    isAuth: !!email,\r\n    email,\r\n    token,\r\n    id\r\n  }\r\n}","import React from 'react'\r\nimport { getAuth, createUserWithEmailAndPassword } from 'firebase/auth'\r\nimport { Form } from './Form'\r\nimport { useLocation, useNavigate } from 'react-router'\r\nimport { setUser } from '../store/userSlice'\r\nimport { useAppDispatch } from '../hook/redux-hooks'\r\n// import { us } from 'react-router-dom'\r\n\r\n\r\n\r\nexport const SignUp = () => {\r\n  const navigate = useNavigate()\r\n  const dispatch = useAppDispatch()\r\n  const handleRegister = (email: string, password: string) => {\r\n    const auth = getAuth()\r\n    createUserWithEmailAndPassword(auth, email, password)\r\n      .then(({user}) => {\r\n        console.log(user)\r\n        dispatch(setUser({\r\n          email: user.email,\r\n          id: user.uid,\r\n          token: user.refreshToken,\r\n        }))\r\n        navigate('/')\r\n      })\r\n      .catch(console.error)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form title='Register' handleClick={handleRegister} />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { SignUp } from '../Components/SignUp'\r\n\r\n\r\nexport const RegisterPage = () => {\r\n  return (\r\n   <div>\r\n     <h1>Register</h1>\r\n     <SignUp />\r\n   </div>\r\n  )\r\n}\r\n","import { initializeApp } from \"firebase/app\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBMvaoP_y-PsLzVf8E4ML7rBGeE6aB7phM\",\r\n  authDomain: \"authexemple-1e9b2.firebaseapp.com\",\r\n  projectId: \"authexemple-1e9b2\",\r\n  storageBucket: \"authexemple-1e9b2.appspot.com\",\r\n  messagingSenderId: \"674947416743\",\r\n  appId: \"1:674947416743:web:2503d93018b9f33e295182\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n","import React from 'react'\r\nimport { Route, Routes } from 'react-router'\r\nimport { CreatePost } from './pages/CreatePost'\r\nimport { HomePage } from './pages/HomePage'\r\nimport { LoginPage } from './pages/LoginPage'\r\nimport { RegisterPage } from './pages/RegisterPage'\r\nimport './firebase'\r\n\r\n\r\nfunction App() {\r\n  return <div className='App'>\r\n<Routes>\r\n  <Route path='/' element={<HomePage />} />\r\n  <Route path='/login' element={<LoginPage />} />\r\n  <Route path='/register' element={<RegisterPage />} />\r\n  <Route path='/create' element={<CreatePost />} />\r\n</Routes>\r\n\r\n  </div>\r\n}\r\n\r\nexport default App\r\n","import { getAuth } from 'firebase/auth'\r\nimport { configureStore } from '@reduxjs/toolkit'\r\nimport userReduser from './userSlice'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    user: userReduser,\r\n  },\r\n})\r\n\r\nexport type AppDispatch = typeof store.dispatch\r\nexport type RootState = ReturnType<typeof store.getState>","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename='/authts' >\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}